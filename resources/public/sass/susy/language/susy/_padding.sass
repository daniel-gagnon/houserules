// Padding Syntax
// ==============

// Prefix
// ------
// Add spanning-padding before an element.
// - $span  : <span>
=prefix($span)
  $inspect: $span
  $span: map-merge((spread: wide), parse-span($span))
  $flow: susy-get(flow, $span)
  $width: span($span)
  @if is-inside($span)
    $gutter: gutter($span)
    $width: if($gutter and comparable($width, $gutter), $width + $gutter, $width)
  +susy-inspect(prefix, $inspect)
  +padding-output($width, null, $flow)

// Suffix
// ------
// Add spanning-padding after an element.
// - $span  : <span>
=suffix($span)
  $inspect: $span
  $span: map-merge((spread: wide), parse-span($span))
  $flow: susy-get(flow, $span)
  $width: span($span)
  @if is-inside($span)
    $gutter: gutter($span)
    $width: if($gutter and comparable($width, $gutter), $width + $gutter, $width)
  +susy-inspect(suffix, $inspect)
  +padding-output(null, $width, $flow)

// Pad
// ---
// Add spanning-padding before and after an element.
// - $pre     : <span>
// - [$post]  : <span>
=pad($pre, $post: false)
  $inspect: $pre, $post
  $pre: map-merge((spread: wide), parse-span($pre))
  @if $post
    $post: map-merge((spread: wide), parse-span($post))
  @else
    $span: susy-get(span, $pre)
    @if length($span) > 1
      $pre: map-merge($pre, (span: nth($span, 1)))
      $post: map-merge($pre, (span: nth($span, 2)))
    @else
      $post: $pre
  +susy-inspect(pad, $inspect...)
  +prefix($pre)
  +suffix($post)
